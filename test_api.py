"""
Test script to demonstrate the MoodTune AI API functionality with Gemini integration
"""
import requests
import json
import time

# Test the emotion-based song recommendation endpoint
def test_emotion_songs():
    print("🎵 Testing Gemini-powered song recommendations...")
    
    emotions_to_test = ["angry", "sad", "happy", "fear"]
    
    for emotion in emotions_to_test:
        try:
            print(f"\n📊 Testing emotion: {emotion.upper()}")
            print("⏳ Calling Gemini API...")
            
            response = requests.get(f"http://localhost:8000/songs/{emotion}")
            
            if response.status_code == 200:
                data = response.json()
                print(f"💡 Explanation: {data['explanation']}")
                print("🎶 Gemini-Recommended Songs:")
                
                if data['songs']:
                    for i, song in enumerate(data['songs'], 1):
                        print(f"   {i}. {song['song_name']}")
                        print(f"      🔗 {song['link']}")
                else:
                    print("   No songs returned - check Gemini API connection")
            else:
                print(f"❌ Error for {emotion}: {response.status_code}")
                
        except Exception as e:
            print(f"❌ Error testing {emotion}: {e}")
        
        # Add delay between requests to avoid rate limiting
        time.sleep(2)

def test_root_endpoint():
    print("🏠 Testing root endpoint...")
    try:
        response = requests.get("http://localhost:8000/")
        if response.status_code == 200:
            print("✅ Root endpoint working:", response.json()['message'])
        else:
            print(f"❌ Root endpoint error: {response.status_code}")
    except Exception as e:
        print(f"❌ Error testing root endpoint: {e}")

if __name__ == "__main__":
    print("🚀 Starting MoodTune AI API Tests")
    print("=" * 50)
    
    # Test root endpoint
    test_root_endpoint()
    
    print("\n" + "=" * 50)
    
    # Test emotion-based recommendations
    test_emotion_songs()
    
    print("\n" + "=" * 50)
    print("✨ Gemini Integration Test completed!")
    print("🔧 Make sure your backend server is running on http://localhost:8000")
    print("🔑 Gemini API key is configured in config.py")
    print("🎵 Songs are now dynamically generated by Gemini AI!")
